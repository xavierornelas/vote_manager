/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package screen;

import dao.CasillaDaoImp;
import dao.PerfilDaoImp;
import dao.RolDaoImp;
import dao.SeccionalDaoImp;
import dao.StatusPerfilDaoImp;
import dao.TipoCasillaDaoImp;
import entidades.Casilla;
import entidades.Perfil;
import entidades.Rol;
import entidades.Seccional;
import entidades.SeccionalPerfil;
import entidades.StatusPerfil;
import entidades.TipoCasilla;
import entidades.Usuario;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author franciscoornelas
 */
public class AltaSeccionalForm extends javax.swing.JFrame {

    Usuario usuario;
    Perfil perfil;
    Seccional seccional;
    List<TipoCasilla> tipoCasilla;
    List<StatusPerfil> statusPerfil;
    List<Rol> roles;

    /**
     * Creates new form AltaSeccional
     */
    public AltaSeccionalForm(Usuario usuario) {
        initComponents();
        this.usuario = usuario;
        this.tipoCasilla = new TipoCasillaDaoImp().obtenerTipoCasilla();
        this.roles = new RolDaoImp().obtenerRoles();
        this.statusPerfil = new StatusPerfilDaoImp().obtenerStatusPerfil();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTPersonalidades = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jBGuardar = new javax.swing.JButton();
        jBCasilla = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTCasillas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jBAgregarPersonalidad = new javax.swing.JButton();
        jBBuscar = new javax.swing.JButton();
        jTFSeccional = new javax.swing.JTextField();
        jBCancelar = new javax.swing.JButton();
        jBActualizarTablas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel1.setText("Acta de seccional");

        jLabel2.setText("Seccional");

        jTPersonalidades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id personalidad", "Nombre", "Rol", "Estatus"
            }
        ));
        jScrollPane1.setViewportView(jTPersonalidades);

        jLabel6.setText("Casillas");

        jBGuardar.setText("Guardar");

        jBCasilla.setText("Agregar casilla");
        jBCasilla.setEnabled(false);
        jBCasilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCasillaActionPerformed(evt);
            }
        });

        jTCasillas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. Casilla", "Tipo de casilla", "Comentarios"
            }
        ));
        jScrollPane2.setViewportView(jTCasillas);

        jLabel7.setText("Personalidades");

        jBAgregarPersonalidad.setText("Agregar personalidad");
        jBAgregarPersonalidad.setEnabled(false);
        jBAgregarPersonalidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarPersonalidadActionPerformed(evt);
            }
        });

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBActualizarTablas.setText("Actualizar tablas");
        jBActualizarTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarTablasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBCasilla))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBCancelar)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFSeccional)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBAgregarPersonalidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBActualizarTablas)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(197, 197, 197))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jBBuscar)
                    .addComponent(jTFSeccional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jBAgregarPersonalidad)
                    .addComponent(jBActualizarTablas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCasilla))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGuardar)
                    .addComponent(jBCancelar)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(221, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarPersonalidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarPersonalidadActionPerformed
        // TODO add your handling code here:
        AltaPerfil perfil = new AltaPerfil(usuario, this.seccional.getIdSeccional());
        perfil.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        perfil.setVisible(true);
    }//GEN-LAST:event_jBAgregarPersonalidadActionPerformed

    private void jBCasillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCasillaActionPerformed
        // TODO add your handling code here:
        AltaCasillaForm casilla = new AltaCasillaForm(usuario, this.seccional);
        casilla.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        casilla.setVisible(true);
    }//GEN-LAST:event_jBCasillaActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        if (!jTFSeccional.getText().isEmpty()) {
            llenarTablas();
        }
    }//GEN-LAST:event_formFocusGained

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        Seccional seccional = new SeccionalDaoImp().obtenerSeccionalPorNombre(jTFSeccional.getText());
        if (seccional != null) {
            this.seccional = seccional;
            activarBotones();
            llenarTablas();
        } else {
            JOptionPane.showMessageDialog(null, "El seccional no existe", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBActualizarTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarTablasActionPerformed
        // TODO add your handling code here:
        String[] titulosPersonalidad = {"Id personalidad", "Nombre", "Rol", "Estatus"};
        String[] titulosCasila = {"Casilla", "Tipo casilla", "Comentarios"};
        DefaultTableModel modeloCasillas = new DefaultTableModel(null, titulosCasila);//(DefaultTableModel) jTCasillas.getModel(); 
        DefaultTableModel modeloPerfiles = new DefaultTableModel(null, titulosPersonalidad);//(DefaultTableModel) jTPersonalidades.getModel(); 
        //Obtener perfiles relacionados con el seccional
        List<SeccionalPerfil> secPer = new PerfilDaoImp().obtenerPersonalidades(this.seccional.getIdSeccional());
        List<Perfil> personalidades = new PerfilDaoImp().obtenerPersonalidadesConDetalle(secPer);
        if (!personalidades.isEmpty()) {
            for (Perfil personalidad : personalidades) {
                modeloPerfiles.addRow(new Object[]{personalidad.getIdPerfil().toString(), personalidad.getNombre(), obtenerNombreRolDeLista(personalidad.getIdRol()), obtenerStatusPerfilDeLista(personalidad.getIdStatusPerfil())});
            }
            jTPersonalidades.setModel(modeloPerfiles);
        }
        //Obtener casillas relacionadas con el seccional
        List<Casilla> casillas = new CasillaDaoImp().obtenerCasillasPorSeccional(this.seccional.getIdSeccional());
        if (!casillas.isEmpty()) {
            for (Casilla casilla : casillas) {
                modeloCasillas.addRow(new Object[]{casilla.getNombreCasilla(), obtenerTipoCasillaDeLista(casilla.getIdTipoCasilla()), casilla.getDescripcion()});
            }
            jTCasillas.setModel(modeloCasillas);
        }
    }//GEN-LAST:event_jBActualizarTablasActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        if (!jTFSeccional.getText().isEmpty()) {
            llenarTablas();
        }
    }//GEN-LAST:event_formWindowGainedFocus
    private void activarBotones() {
        jBAgregarPersonalidad.setEnabled(true);
        jBCasilla.setEnabled(true);
    }

    private String obtenerTipoCasillaDeLista(Integer idTipoCasilla) {
        String value = "";
        for (TipoCasilla tipo : this.tipoCasilla) {
            if (tipo.getIdTipoCasilla() == idTipoCasilla) {
                value = tipo.getTipo();
                break;
            }
        }
        return value;
    }

    private String obtenerNombreRolDeLista(Integer idRol) {
        String valor = "";
        for (Rol rol : this.roles) {
            if (rol.getIdRol() == idRol) {
                valor = rol.getRol();
            }
        }
        return valor;
    }

    private String obtenerStatusPerfilDeLista(Integer idStatusPerfil) {
        String valor = "";
        for (StatusPerfil status : this.statusPerfil) {
            if (status.getIdStatusPerfil() == idStatusPerfil) {
                valor = status.getStatus();
            }
        }
        return valor;
    }

    private void llenarTablas() {
        String[] titulosPersonalidad = {"Id personalidad", "Nombre", "Rol", "Estatus"};
        String[] titulosCasila = {"Casilla", "Tipo casilla", "Comentarios"};
        DefaultTableModel modeloCasillas = new DefaultTableModel(null, titulosCasila);//(DefaultTableModel) jTCasillas.getModel(); 
        DefaultTableModel modeloPerfiles = new DefaultTableModel(null, titulosPersonalidad);//(DefaultTableModel) jTPersonalidades.getModel(); 
        //Obtener perfiles relacionados con el seccional
        List<SeccionalPerfil> secPer = new PerfilDaoImp().obtenerPersonalidades(this.seccional.getIdSeccional());
        if (secPer != null) {
            List<Perfil> personalidades = new PerfilDaoImp().obtenerPersonalidadesConDetalle(secPer);
            if (personalidades != null) {
                for (Perfil personalidad : personalidades) {
                    modeloPerfiles.addRow(new Object[]{personalidad.getIdPerfil().toString(), personalidad.getNombre(), obtenerNombreRolDeLista(personalidad.getIdRol()), obtenerStatusPerfilDeLista(personalidad.getIdStatusPerfil())});
                }
                jTPersonalidades.setModel(modeloPerfiles);
            }
        }
        else{
            jTPersonalidades.setModel(modeloPerfiles);
        }
        //Obtener casillas relacionadas con el seccional
        List<Casilla> casillas = new CasillaDaoImp().obtenerCasillasPorSeccional(this.seccional.getIdSeccional());
        if (casillas != null) {
            for (Casilla casilla : casillas) {
                modeloCasillas.addRow(new Object[]{casilla.getNombreCasilla(), obtenerTipoCasillaDeLista(casilla.getIdTipoCasilla()), casilla.getDescripcion()});
            }
            jTCasillas.setModel(modeloCasillas);
        }
        else{
            jTCasillas.setModel(modeloCasillas);
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizarTablas;
    private javax.swing.JButton jBAgregarPersonalidad;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBCasilla;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTCasillas;
    private javax.swing.JTextField jTFSeccional;
    private javax.swing.JTable jTPersonalidades;
    // End of variables declaration//GEN-END:variables
}
